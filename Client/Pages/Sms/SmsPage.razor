@page "/sms"

@using SMSGateway.Client.Models
@using System.Net.Http.Json
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Microsoft.Extensions.Configuration
@inject AuthenticationStateProvider _authenticationStateProvider
@inject HttpClient _httpClient
@inject IConfiguration _configuration
@inject ISnackbar _snackbar


<MudPaper Height="100%" Width="100%">
    <MudContainer MaxWidth="MaxWidth.Large">
        <MudCard>
            <MudCardContent>
                <MudPaper Class="pa-4 justify-center my-4 mud-text-align-center">
                    <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-4">SMS</MudText>
                </MudPaper>
                <MudForm>
                    <MudGrid>
                        <MudItem xs="12" md="12">
                            <MudSelect Label="Contacts" HelperText="Select contacts"
                                       MultiSelection="true" OffsetY="true" DelimitedStringSeparator="^" SelectAll="true" SelectAllText="Select all contacts"
                                       @bind-Value="contactValue" @bind-SelectedValues="contactOptions" AdornmentIcon="@Icons.Material.Filled.Search">
                                @foreach (var contact in contactList)
                                {
                                    <MudSelectItem Value="@contact.PhoneNumber">@contact.FirstName @contact.LastName (@contact.PhoneNumber)</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" md="12">
                            <MudSelect Label="Contact Groups" HelperText="Select contact groups"
                                       MultiSelection="true" OffsetY="true" DelimitedStringSeparator="^" SelectAll="true" SelectAllText="Select all contact groups"
                                       @bind-Value="groupValue" @bind-SelectedValues="groupOptions" AdornmentIcon="@Icons.Material.Filled.Search">
                                @foreach (var group in groupList)
                                {
                                    <MudSelectItem Value="@group.ReferenceId">@group.GroupName</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" md="12">
                            <MudSelect Label="Template" @onchange="SetContent" @bind-Value="templateValue" HelperText="Select template"
                                       OpenIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary">
                                @foreach (var item in templateList)
                                {
                                    <MudSelectItem Value="item.ReferenceId">@item.SmsTemplateName</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudTextField Lines="6" @bind-Value="@smsConfig.SendTo" Variant="Variant.Outlined" T="string" Label="Phone Numbers" />
                        <MudTextField Lines="6" @bind-Value="@smsConfig.Content" Variant="Variant.Outlined" T="string" Label="Messages" />
                    </MudGrid>
                </MudForm>
            </MudCardContent>
        </MudCard>

        <MudPaper Class="pa-4 justify-center my-4 mud-text-align-center">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mx-2" OnClick="@(()=>SendSms(smsConfig))">Send</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="mx-2">Clear</MudButton>
        </MudPaper>
    </MudContainer>
</MudPaper>

@code {

    //private IConfiguration _configuration;
    public SmsModel smsConfig { get; set; } = new();

    private string contactValue { get; set; } = "";
    private HashSet<string> contactOptions { get; set; } = new HashSet<string>() { };

    private string groupValue { get; set; } = "";
    private HashSet<string> groupOptions { get; set; } = new HashSet<string>() { };

    private string templateValue { get; set; } = "";

    private IEnumerable<ContactModel> contactList = new List<ContactModel>();
    private IEnumerable<GroupModel> groupList = new List<GroupModel>();
    private IEnumerable<SmsTemplateModel> templateList = new List<SmsTemplateModel>();

    protected async override Task OnInitializedAsync()
    {
        contactList = await _httpClient.GetFromJsonAsync<List<ContactModel>>("/api/contact/GetContact");
        groupList = await _httpClient.GetFromJsonAsync<List<GroupModel>>("/api/group/GetGroup");
        templateList = await _httpClient.GetFromJsonAsync<List<SmsTemplateModel>>("/api/smsTemplate/GetSmsTemplate");
    }
}
