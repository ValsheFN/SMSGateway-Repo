@page "/history"

@using SMSGateway.Client.Models
@using System.Net.Http.Json
@using System.Security.Claims
@using System.Net.Http.Headers

@inject Blazored.LocalStorage.ISyncLocalStorageService _localStorage
@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navigation
@inject MudBlazor.ISnackbar _snackbar
@inject HttpClient _httpClient
@inject IDialogService DialogService
@attribute [Authorize]

<MudPaper Height="100%" Width="100%">
<MudContainer MaxWidth="MaxWidth.Large">
    <MudTable FixedHeader="true" Items="@ListOfHistory" Filter="new Func<HistoryModel, bool>(Search)" SortLabel="SortBy">
        <ToolBarContent>
            <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-4">History</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <ColGroup>
            <col style="width: 30%;" />
            <col style="width: 40%;" />
            <col style="width: 10%;" />
            <col style="width: 10%;" />
            <col style="width: 10%;" />
        </ColGroup>
        <HeaderContent>
            <MudTh Style="display: none"><MudTableSortLabel SortBy="new Func<HistoryModel, object>(x=>x.ReferenceId)" T="HistoryModel">Reference Id</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<HistoryModel, object>(x=>x.Recipients)" T="HistoryModel">Recipients</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<HistoryModel, object>(x=>x.Messages)" T="HistoryModel">Messages</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<HistoryModel, object>(x=>x.Status)" T="HistoryModel">Status</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Descending" SortBy="new Func<HistoryModel, object>(x=>x.TimeSent)" T="HistoryModel">Time Sent</MudTableSortLabel></MudTh>
            <MudTh>Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd Style="display: none" DataLabel="referenceId">@context.ReferenceId</MudTd>
            <MudTd DataLabel="recipients">@context.Recipients</MudTd>
            <MudTd DataLabel="messages">@context.Messages</MudTd>
            <MudTd DataLabel="status">@context.Status</MudTd>
            <MudTd DataLabel="timeSent">@context.TimeSent</MudTd>
            <MudTd DataLabel="">
                <MudFab aria-label="Show details" @onclick="@(()=>ShowDetails(@context))" Color="Color.Primary"
                        Icon="@Icons.Material.Filled.Info" Size="Size.Small" IconSize="Size.Small" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100 }" />
        </PagerContent>
    </MudTable>
</MudContainer>
</MudPaper>

@code {
    private string searchString = "";

    private bool Search(HistoryModel model) => SearchFunc(model, searchString);

    private bool SearchFunc(HistoryModel model, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (model.ReferenceId.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (model.Recipients.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (model.Messages.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (model.Status.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ((model.TimeSent.ToString()).Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{model.ReferenceId} {model.Recipients} {model.Messages} {model.Status} {model.TimeSent}".Contains(searchString))
            return true;
        return false;
    }
}
