@using SMSGateway.Client.Models

@inject Blazored.LocalStorage.ISyncLocalStorageService _localStorage
@inject HttpClient _httpClient
@inject ISnackbar Snackbar
@inject NavigationManager _navigation

@using Newtonsoft.Json

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />
            Update user
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Variant="Variant.Outlined" ReadOnly="true" @bind-Value="@user.Id" Label="Id" />
        <MudTextField Variant="Variant.Outlined" ReadOnly="true" @bind-Value="@user.Email" Label="Email" />
        <MudTextField Variant="Variant.Outlined" @bind-Value="@user.UserName" Label="User Name" RequiredError="User name is required!" />
        <MudTextField Variant="Variant.Outlined" @bind-Value="@user.CostPerSms" Label="Cost per SMS" RequiredError="Cost per SMS is required!" />
        <MudTextField Variant="Variant.Outlined" @bind-Value="@user.SmsCredit" Label="SMS Credit" RequiredError="SMS credit is required!" />
        <MudItem xs="12" md="12">
            <MudSelect Label="Role Name" HelperText="Select role"
                       OffsetY="true" RequiredError="Role is required!"
                       @bind-Value=roleValue AdornmentIcon="@Icons.Material.Filled.Search">
                @foreach (var role in ListOfRoles)
                {
                    <MudSelectItem Value="@role.Name">@role.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@((e)=>UpdateUser(@user) )">Update User</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public UserModel user { get; set; } = new UserModel();

    public string roleValue { get; set; } = "";

    private IEnumerable<UserModel> ListOfUsers = new List<UserModel>();
    private IEnumerable<RoleModel> ListOfRoles = new List<RoleModel>();


}