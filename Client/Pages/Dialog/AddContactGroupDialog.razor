@using SMSGateway.Client.Models
@using System.ComponentModel.DataAnnotations

@inject IDialogService DialogService
@inject HttpClient _httpClient
@inject ISnackbar Snackbar
@inject NavigationManager _navigation

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Create" Class="mr-3 mb-n1" />
            Add contacts to a group
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12" md="12">
                <MudSelect Label="Select group" @bind-Value="groupValue" HelperText="Contact group"
                           OpenIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary">
                    @foreach (var item in groupList)
                    {
                        <MudSelectItem Value="item.ReferenceId">@item.GroupName</MudSelectItem>
                    }

                </MudSelect>
            </MudItem>
            <MudItem xs="12" md="12">
                <MudSelect Label="Contacts" HelperText="Select contacts"
                           MultiSelection="true" OffsetY="true" DelimitedStringSeparator="^" SelectAll="true" SelectAllText="Select all contacts"
                           @bind-Value="contactValue" @bind-SelectedValues="contactOptions" AdornmentIcon="@Icons.Material.Filled.Search">
                    @foreach (var contact in ListOfContacts)
                    {
                        <MudSelectItem Value="@contact.PhoneNumber">@contact.FirstName @contact.LastName (@contact.PhoneNumber) </MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12" md="6">
                <MudText Typo="Typo.body2">MudSelect.Value: "@contactValue"</MudText>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@((e)=>CreateContactGroup(contactGroup) )">Create Contact Group</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public ContactGroupModel contactGroup { get; set; } = new ContactGroupModel();

    private IEnumerable<ContactModel> ListOfContacts = new List<ContactModel>();
    private IEnumerable<GroupModel> groupList = new List<GroupModel>();

    private string contactValue { get; set; } = "";
    private string groupValue { get; set; } = "";

    private HashSet<string> contactOptions { get; set; } = new HashSet<string>() {};


    protected async override void OnInitialized()
    {
        groupList = await _httpClient.GetFromJsonAsync<List<GroupModel>>("/api/group/GetGroup");
        ListOfContacts = await _httpClient.GetFromJsonAsync<List<ContactModel>>("/api/contact/GetContact");
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void CreateContactGroup(ContactGroupModel model)
    {
        // 1. Get contact group id
        var response = _httpClient.PostAsJsonAsync("/api/contactGroup/CreateContactGroup/", model);

        StateHasChanged();
        _navigation.NavigateTo("/contactGroup");

        Snackbar.Add("Contact Group Created", Severity.Success);
        MudDialog.Close(DialogResult.Ok(model.GroupName));
    }
}
