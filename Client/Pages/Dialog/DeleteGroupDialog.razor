@using SMSGateway.Client.Models

@inject HttpClient _httpClient
@inject ISnackbar Snackbar
@inject NavigationManager _navigation

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1" />
            Delete group?
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Variant="Variant.Outlined" ReadOnly="true" Value="@group.ReferenceId" Label="Reference Id" />
        <MudTextField Variant="Variant.Outlined" Value="@group.GroupName" Label="Group Name" ReadOnly="true" />
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="DeleteGroup">Delete Group</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public GroupModel group { get; set; } = new GroupModel();

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void DeleteGroup()
    {
        var response = _httpClient.DeleteAsync("/api/group/RemoveGroup/" + group.ReferenceId);

        StateHasChanged();
        _navigation.NavigateTo("/group");

        Snackbar.Add("Group Deleted", Severity.Success);
        MudDialog.Close(DialogResult.Ok(group.GroupName));
    }
}
